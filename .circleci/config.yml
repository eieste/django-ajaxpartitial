# Javascript Node CircleCI 2.0 configuration file
#
# Check {{ '/2.0/language-javascript/' | docs_url }} for more details
#
version: 2.1

defaults: &defaults
  docker:
    - image: circleci/node:8.9.1

jobs:
  pythonjsbuild:
    docker:
      - image: circleci/node:8.9.1
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: cd partitialajax/src/; npm install
      - run:
          name: Build Webpack
          command: cd partitialajax/src/; npm run build
      - run:
          name: Cleanup
          command: rm -Rf partitialajax/src/
      - save_cache:
          key: pythonjs-{{ .Revision }}
          paths:
            - ./

  qa:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: pip3 install --user -r requirements.txt; pip3 install --user coveralls
      - run:
          name: Install and Test
          command: python3 testhelper.py
      - run:
          name: Coverage
          command: coverage run testhelper.py
      - run:
          name: Coveralls
          command: coveralls
  npmdeploy:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > ~/.npmrc
      - run:
          name: Publish package
          command: cd partitialajax/src/; npm publish
  pypideploy:
    docker:
      - image: circleci/python:3.7
    steps:
      - restore_cache:
          key: pythonjs-{{ .Revision }}
      - run:
          command: |
            sudo pip install setuptools wheel twine
          name: Install dependencies
      - run:
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
          name: Init .pypirc
      - run:
          command: |
            ls -lah;
            python3 setup.py sdist bdist_wheel
          name: Create packages
      - run:
          command: |
            twine upload dist/*
          name: Upload to pypi

workflows:
  version: 2
  publish:
    jobs:
      - qa
      - npmdeploy:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - pythonjsbuild:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - pypideploy:
          requires:
            - pythonjsbuild
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/